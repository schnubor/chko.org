{"version":3,"sources":["backend.coffee"],"names":[],"mappings":";AAAA;;;;AAAA;EAKA,CAAA,CAAE,oBAAF,CAAuB,CAAC,EAAxB,CAA2B,eAA3B,EAA4C,SAAC,KAAD;AACxC,QAAA;IAAA,KAAA,GAAQ,CAAA,CAAE,IAAF;IACR,MAAA,GAAS,CAAA,CAAE,KAAK,CAAC,aAAR;IACT,EAAA,GAAK,MAAM,CAAC,IAAP,CAAY,IAAZ;WACL,CAAC,CAAC,OAAF,CAAU,YAAA,GAAa,EAAvB,EAA2B,SAAC,IAAD;MAGvB,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,CAAC,IAAvB,CAA4B,QAA5B,EAAsC,YAAA,GAAa,IAAI,CAAC,EAAlB,GAAqB,OAA3D;aACA,KAAK,CAAC,IAAN,CAAW,WAAX,CAAuB,CAAC,GAAxB,CAA4B,IAAI,CAAC,KAAjC;IAJuB,CAA3B;EAJwC,CAA5C;;EAWA,CAAA,CAAE,mBAAF,CAAsB,CAAC,EAAvB,CAA0B,eAA1B,EAA2C,SAAC,KAAD;AACvC,QAAA;IAAA,KAAA,GAAQ,CAAA,CAAE,IAAF;IACR,MAAA,GAAS,CAAA,CAAE,KAAK,CAAC,aAAR;IACT,EAAA,GAAK,MAAM,CAAC,IAAP,CAAY,IAAZ;WACL,CAAC,CAAC,OAAF,CAAU,eAAA,GAAgB,EAA1B,EAA8B,SAAC,IAAD;MAG1B,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,CAAC,IAAvB,CAA4B,QAA5B,EAAsC,WAAA,GAAY,IAAI,CAAC,EAAjB,GAAoB,OAA1D;MACA,KAAK,CAAC,IAAN,CAAW,WAAX,CAAuB,CAAC,GAAxB,CAA4B,IAAI,CAAC,KAAjC;aACA,KAAK,CAAC,IAAN,CAAW,iBAAX,CAA6B,CAAC,GAA9B,CAAkC,IAAI,CAAC,WAAvC;IAL0B,CAA9B;EAJuC,CAA3C;;EAYA,CAAA,CAAE,gBAAF,CAAmB,CAAC,EAApB,CAAuB,eAAvB,EAAwC,SAAC,KAAD;AACpC,QAAA;IAAA,KAAA,GAAQ,CAAA,CAAE,IAAF;IACR,MAAA,GAAS,CAAA,CAAE,KAAK,CAAC,aAAR;IACT,EAAA,GAAK,MAAM,CAAC,IAAP,CAAY,IAAZ;WACL,CAAC,CAAC,OAAF,CAAU,YAAA,GAAa,EAAvB,EAA2B,SAAC,IAAD;MAEvB,KAAK,CAAC,IAAN,CAAW,UAAX,CAAsB,CAAC,IAAvB,CAA4B,QAA5B,EAAsC,QAAA,GAAS,IAAI,CAAC,EAAd,GAAiB,OAAvD;MACA,KAAK,CAAC,IAAN,CAAW,WAAX,CAAuB,CAAC,GAAxB,CAA4B,IAAI,CAAC,KAAjC;MACA,KAAK,CAAC,IAAN,CAAW,SAAX,CAAqB,CAAC,GAAtB,CAA0B,IAAI,CAAC,GAA/B;MACA,IAAG,IAAI,CAAC,KAAL,KAAc,CAAjB;QACI,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,KAAjB;eACA,KAAK,CAAC,IAAN,CAAW,WAAX,CAAuB,CAAC,IAAxB,CAA6B,SAA7B,EAAwC,KAAxC,EAFJ;OAAA,MAAA;eAII,KAAK,CAAC,IAAN,CAAW,WAAX,CAAuB,CAAC,IAAxB,CAA6B,SAA7B,EAAwC,IAAxC,EAJJ;;IALuB,CAA3B;EAJoC,CAAxC;AA5BA","file":"backend.js","sourceRoot":"/source/","sourcesContent":["###\n    Modals\n###\n\n# Edit Category\n$('#editCategoryModal').on 'show.bs.modal', (event) ->\n    _self = $(this)\n    button = $(event.relatedTarget) # Button that triggered the modal\n    id = button.data('id') # Extract info from data-* attributes\n    $.getJSON '/category/'+id, (data) ->\n        # console.log data.title\n        # fill in the form\n        _self.find('.js-form').attr('action', '/category/'+data.id+'/edit')\n        _self.find('.js-title').val(data.title)\n\n# Edit Project\n$('#editProjectModal').on 'show.bs.modal', (event) ->\n    _self = $(this)\n    button = $(event.relatedTarget) # Button that triggered the modal\n    id = button.data('id') # Extract info from data-* attributes\n    $.getJSON '/api/project/'+id, (data) ->\n        # console.log data\n        # fill in the form\n        _self.find('.js-form').attr('action', '/project/'+data.id+'/edit')\n        _self.find('.js-title').val(data.title)\n        _self.find('.js-description').val(data.description)\n\n# Edit Category\n$('#editLinkModal').on 'show.bs.modal', (event) ->\n    _self = $(this)\n    button = $(event.relatedTarget) # Button that triggered the modal\n    id = button.data('id') # Extract info from data-* attributes\n    $.getJSON '/api/link/'+id, (data) ->\n        # fill in the form\n        _self.find('.js-form').attr('action', '/link/'+data.id+'/edit')\n        _self.find('.js-title').val(data.title)\n        _self.find('.js-url').val(data.url)\n        if data.blank is 0\n            console.log data.blank\n            _self.find('.js-blank').prop('checked', false)\n        else\n            _self.find('.js-blank').prop('checked', true)\n"]}